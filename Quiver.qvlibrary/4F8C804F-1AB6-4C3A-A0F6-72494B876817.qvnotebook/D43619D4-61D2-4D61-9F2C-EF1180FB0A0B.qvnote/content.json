{
  "title": "CoreData",
  "cells": [
    {
      "type": "text",
      "data": "save example (C in CRUD)"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "  func save(name: String) {\n    guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n      return\n    }\n    \n    let managedContext = appDelegate.persistentContainer.viewContext\n    let entity = NSEntityDescription.entity(forEntityName: \"Person\", in: managedContext)!\n    let person = NSManagedObject(entity: entity, insertInto: managedContext)\n    person.setValue(name, forKeyPath: \"name\")\n    \n    do {\n      try managedContext.save()\n      people.append(person)\n    } catch let error as NSError {\n      print(\"Coud not save. \\(error), \\(error.userInfo)\")\n    }\n  }"
    },
    {
      "type": "text",
      "data": "<div>fetch example (R in CRUD) -&gt; here for a table to load saved data</div>"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "  override func viewWillAppear(_ animated: Bool) {\n    super.viewWillAppear(true)\n    \n    guard let appDelegate = UIApplication.shared.delegate as? AppDelegate else {\n      return\n    }\n    \n    let managedContext = appDelegate.persistentContainer.viewContext\n    \n    let fetchRequest = NSFetchRequest<NSManagedObject>(entityName: \"Person\")\n    \n    do {\n      people =\n      try managedContext.fetch(fetchRequest)\n    } catch let error as NSError {\n      print(\"Coud not fetch. \\(error), \\(error.userInfo)\")\n    }\n  }"
    },
    {
      "type": "text",
      "data": "<div>Test Code in AppDelegate</div>"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "   let bowtie = NSEntityDescription.insertNewObject(forEntityName: \"Bowtie\", into: self.persistentContainer.viewContext) as! Bowtie\n    bowtie.name = \"My bow tie\"\n    bowtie.lastWorn = NSDate()\n    \n    do {\n      let fetchRequest = NSFetchRequest<Bowtie>(entityName: \"Bowtie\")\n      let bowties =\n        \n        try self.persistentContainer.viewContext.fetch(fetchRequest)\n      \n      let sample = bowties.first\n      print(\"Name: \\(String(describing: sample?.name)), Worn: \\(String(describing: sample?.lastWorn))\")\n          \n      }  catch let error as NSError {\n        print(\"Fetching error \\(error), \\(error.userInfo)\")\n      }"
    },
    {
      "type": "text",
      "data": "Finally the real world code in AppDelegate"
    },
    {
      "type": "code",
      "language": "swift",
      "data": "func application(_ application: UIApplication, didFinishLaunchingWithOptions launchOptions: [UIApplicationLaunchOptionsKey: Any]?) -> Bool {\n    \n    guard let rootViewController = window?.rootViewController as? ViewController else {\n      return true\n    }\n    \n    rootViewController.managedContext = persistentContainer.viewContext\n    \n    return true\n  }"
    }
  ]
}