{
  "title": "Carthage",
  "cells": [
    {
      "type": "text",
      "data": "<ol style=\"box-sizing: border-box; padding-left: 2em; margin-top: 0px; margin-bottom: 16px; color: rgb(36, 41, 46); font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px; background-color: rgb(255, 255, 255);\"><li style=\"box-sizing: border-box;\"><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">Create a&nbsp;<a href=\"https://github.com/Carthage/Carthage/blob/master/Documentation/Artifacts.md#cartfile\" style=\"box-sizing: border-box; -webkit-text-decoration-skip: objects; color: rgb(3, 102, 214); text-decoration: none;\">Cartfile</a>&nbsp;that lists the frameworks you’d like to use in your project.</p></li><li style=\"box-sizing: border-box; margin-top: 0.25em;\"><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">Run&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; background-color: rgba(27, 31, 35, 0.0470588);\">carthage update</code>.&nbsp;</p><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">This will fetch dependencies into a&nbsp;<a href=\"https://github.com/Carthage/Carthage/blob/master/Documentation/Artifacts.md#carthagecheckouts\" style=\"box-sizing: border-box; -webkit-text-decoration-skip: objects; color: rgb(3, 102, 214); text-decoration: none;\">Carthage/Checkouts</a>&nbsp;folder, then build each one or download a pre-compiled framework.</p><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><b>Hint</b></p><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px;\">carthage update --platform ios</span></p><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\"><span style=\"font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px;\"><span style=\"font-family: -apple-system, BlinkMacSystemFont, &quot;Segoe UI&quot;, Helvetica, Arial, sans-serif, &quot;Apple Color Emoji&quot;, &quot;Segoe UI Emoji&quot;, &quot;Segoe UI Symbol&quot;; font-size: 16px;\">&gt;&gt;&gt;If you don't specify the platform, Carthage'll try building for all XCode target platforms (including tvOS, watchOS), which quiten often will fail.</span><br></span></p></li><li style=\"box-sizing: border-box; margin-top: 0.25em;\"><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">On your application targets’ “General” settings tab, in the “Linked Frameworks and Libraries” section, drag and drop each framework you want to use from the&nbsp;<a href=\"https://github.com/Carthage/Carthage/blob/master/Documentation/Artifacts.md#carthagebuild\" style=\"box-sizing: border-box; -webkit-text-decoration-skip: objects; color: rgb(3, 102, 214); text-decoration: none;\">Carthage/Build</a>&nbsp;folder on disk.</p></li><li style=\"box-sizing: border-box; margin-top: 0.25em;\"><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">On your application targets’ “Build Phases” settings tab, click the “+” icon and choose “New Run Script Phase”. Create a Run Script in which you specify your shell (ex:&nbsp;<code style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; background-color: rgba(27, 31, 35, 0.0470588);\">/bin/sh</code>), add the following contents to the script area below the shell:</p><div class=\"highlight highlight-source-shell\" style=\"box-sizing: border-box; margin-bottom: 16px;\"><pre style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; margin-top: 0px; margin-bottom: 0px; word-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; background-color: rgb(246, 248, 250); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px; word-break: normal;\">/usr/local/bin/carthage copy-frameworks</pre></div></li><li style=\"box-sizing: border-box; margin-top: 0.25em;\"><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">Add the paths to the frameworks you want to use under “Input Files”, e.g.:</p><pre style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; margin-top: 0px; margin-bottom: 16px; word-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; background-color: rgb(246, 248, 250); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;\"><code style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; display: inline; overflow: visible; line-height: inherit; word-wrap: normal;\">$(SRCROOT)/Carthage/Build/iOS/Result.framework\n$(SRCROOT)/Carthage/Build/iOS/ReactiveSwift.framework\n$(SRCROOT)/Carthage/Build/iOS/ReactiveCocoa.framework\n</code></pre></li><li style=\"box-sizing: border-box; margin-top: 0.25em;\"><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">Add the paths to the copied frameworks to the “Output Files”, e.g.:</p><pre style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; margin-top: 0px; margin-bottom: 16px; word-wrap: normal; padding: 16px; overflow: auto; line-height: 1.45; background-color: rgb(246, 248, 250); border-top-left-radius: 3px; border-top-right-radius: 3px; border-bottom-right-radius: 3px; border-bottom-left-radius: 3px;\"><code style=\"box-sizing: border-box; font-family: SFMono-Regular, Consolas, &quot;Liberation Mono&quot;, Menlo, Courier, monospace; font-size: 13.600000381469727px; display: inline; overflow: visible; line-height: inherit; word-wrap: normal;\">$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/Result.framework\n$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/ReactiveSwift.framework\n$(BUILT_PRODUCTS_DIR)/$(FRAMEWORKS_FOLDER_PATH)/ReactiveCocoa.framework\n</code></pre><p style=\"box-sizing: border-box; margin-top: 16px; margin-bottom: 16px;\">With output files specified alongside the input files, Xcode only needs to run the script when the input files have changed or the output files are missing. This means dirty builds will be faster when you haven't rebuilt frameworks with Carthage.</p></li></ol>"
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": "If something goes wrong, one workaround is creating a new - empty - project w/ the same Cartfile and adjust the .xcodeproj settings according to the fresh one (assuming build etc. works"
    }
  ]
}