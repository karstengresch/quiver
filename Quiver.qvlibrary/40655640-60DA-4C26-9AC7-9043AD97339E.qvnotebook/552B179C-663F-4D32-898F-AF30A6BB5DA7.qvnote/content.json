{
  "title": "Local openshift.io",
  "cells": [
    {
      "type": "code",
      "language": "sh",
      "data": "# https://github.com/minishift/minishift-b2d-iso/releases/download/v1.0.2/minishift-b2d.iso\nminishift start --cpus 2 --memory=8192 --iso-url https://github.com/minishift/minishift-b2d-iso/releases/download/v1.0.2/minishift-b2d.iso"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "#!/usr/bin/env bash\n\n# Goal of the script :\n# 1) Deploy Launchpad mission control template using the parameters passed to authenticate the user,\n# 2) Setup the Github identity (account & token) &\n# 3) Patch jenkins to use admin as role\n#\n# Command to be used\n# ./deploy_launchpad_mission.sh -p projectName -i username:password -g myGithubUser:myGithubToken OR\n# ./deploy_launchpad_mission.sh -p projectName -t myOpenShiftToken -g myGithubUser:myGithubToken OR\n# ./deploy_launchpad_mission.sh -p projectName -i username:password -g myGithubUser:myGithubToken -v v3\n\n# Set Default values\nPROJECTNAME=\"myproject\"\nid=\"developer:developer\"\nVERSION=\"v4\"\n\nwhile getopts p:g:t:i:v: option\ndo\n        case \"${option}\"\n        in\n                p) PROJECTNAME=${OPTARG};;\n                g) github=${OPTARG};;\n                i) id=${OPTARG};;\n                t) TOKEN=${OPTARG};;\n                v) VERSION=${OPTARG};;\n        esac\ndone\n\nCONSOLE_URL=$(minishift console --url)\nIFS=':' read -a IDENTITY <<< \"$id\"\nIFS=':' read -a GITHUB_IDENTITY <<< \"$github\"\nHOSTNAMEORIP=$(echo $CONSOLE_URL | grep -E -o \"([0-9]{1,3}[\\.]){3}[0-9]{1,3}\")\n\necho \"-----------------Parameters -------------------------\"\necho \"Host: $HOSTNAMEORIP\"\necho \"Project: $PROJECTNAME\"\necho \"Console: $CONSOLE_URL\"\necho \"Github user: ${GITHUB_IDENTITY[0]}\"\necho \"Github token: ${GITHUB_IDENTITY[1]}\"\necho \"Identity: ${IDENTITY[0]}, ${IDENTITY[1]}\"\necho \"Version: $VERSION\"\necho \"------------------------------------------\"\n\necho \"------------------- Log on to OpenShift Platform -----------------------\"\nif [ \"$TOKEN\" != \"\" ]; then\n   oc login $CONSOLE_URL --token=$TOKEN\nelse\n   echo \"oc login $CONSOLE_URL -u ${IDENTITY[0]} -p ${IDENTITY[1]}\"\n   oc login $CONSOLE_URL -u ${IDENTITY[0]} -p ${IDENTITY[1]}\nfi\necho \"------------------------------------------\"\n\n# Create Project where launchpad-mission control will be deployed\necho \"------------------ Create New Project ----------------------\"\noc new-project $PROJECTNAME\necho \"------------------------------------------\"\n\n# Install the launchpad-missioncontrol template\necho \"----------------- Install Launchpad template --------------------\"\noc create -n $PROJECTNAME -f https://raw.githubusercontent.com/openshiftio/launchpad-templates/$VERSION/openshift/launchpad-template.yaml\necho \"------------------------------------------\"\n\n# Local Deployment of Launchpad\n# -p LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL=https://openshift.default.svc.cluster.local\n# -p LAUNCHPAD_KEYCLOAK_URL=https://sso.prod-preview.openshift.io/auth \\\n# -p LAUNCHPAD_KEYCLOAK_REALM=fabric8 \\\necho \"------------------ Create launch pad mission application ---------------------\"\noc new-app launchpad -n $PROJECTNAME \\\n    -p LAUNCHPAD_MISSIONCONTROL_GITHUB_USERNAME=${GITHUB_IDENTITY[0]} \\\n    -p LAUNCHPAD_MISSIONCONTROL_GITHUB_TOKEN=${GITHUB_IDENTITY[1]} \\\n    -p LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_CONSOLE_URL=$CONSOLE_URL \\\n    -p LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_API_URL=$CONSOLE_URL \\\n    -p LAUNCHPAD_KEYCLOAK_URL= \\\n    -p LAUNCHPAD_KEYCLOAK_REALM= \\\n    -p LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_USERNAME=${IDENTITY[0]} \\\n    -p LAUNCHPAD_MISSIONCONTROL_OPENSHIFT_PASSWORD=${IDENTITY[1]} \\\n    -p LAUNCHPAD_FRONTEND_HOST=launchpad-frontend-$PROJECTNAME.$HOSTNAMEORIP.nip.io\necho \"------------------------------------------\"\n\n"
    }
  ]
}