{
  "title": "UITextView",
  "cells": [
    {
      "type": "text",
      "data": "<h3>Handle Tap</h3>"
    },
    {
      "type": "text",
      "data": "<b>Very extensive version (from Gist)</b>"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "  @objc func handleTap(tapGesture: UITapGestureRecognizer) {\n    Log.debug?.message(\"Link tapped\")\n    let textView: UITextView = tapGesture.view as! UITextView\n    let tapLocation = tapGesture.location(in: tapGesture.view)\n    \n    var textPosition1 = textView.closestPosition(to: tapLocation)\n    var textPosition2:UITextPosition?\n    if let _ = textPosition1 {\n      textPosition2 = textView.position(from: textPosition1!, offset: 1)\n      if let _ = textPosition2 {\n        textPosition1 = textView.position(from: textPosition1!, offset: -1)\n        textPosition2 = textView.position(from: textPosition1!, offset: 1)\n      } else  {\n        return\n      }\n    }\n\n    let range = textView.textRange(from: textPosition1!, to: textPosition2!)\n    let startOffset = textView.offset(from: textView.beginningOfDocument, to: range!.start)\n    let endOffset = textView.offset(from: textView.beginningOfDocument, to: range!.end)\n    let offsetRange = NSMakeRange(startOffset, endOffset - startOffset)\n    if offsetRange.location == NSNotFound || offsetRange.length == 0 {\n      return\n    }\n    \n    if NSMaxRange(offsetRange) > textView.attributedText.length {\n      return\n    }\n    \n    let attributedSubstring = textView.attributedText .attributedSubstring(from: offsetRange)\n    let link = attributedSubstring.attribute(NSAttributedStringKey.link, at: 0, effectiveRange: nil)\n    \n    if let _ = link {\n      Log.debug?.value(\"\\(String(describing: link))\")\n      return\n    }\n  }"
    },
    {
      "type": "text",
      "data": "<b>Smaller version (working)</b>"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "@objc func handleTap(tapGesture: UIGestureRecognizer) {\n    Log.debug?.message(\"Link tapped.\")\n\n    let textView = tapGesture.view as! UITextView\n    let tapLocation = tapGesture.location(in: textView)\n    let textPosition = textView.closestPosition(to: tapLocation)\n    let attr: NSDictionary = textView.textStyling(at: textPosition!, in: UITextStorageDirection.forward)! as NSDictionary\n\n    if let url: NSURL = attr[NSAttributedStringKey.link] as? NSURL {\n      // UIApplication.shared.openURL(url as URL)\n      Log.debug?.message(\"Link tapped for url: \\(url)\")\n    }\n  }"
    },
    {
      "type": "text",
      "data": ""
    }
  ]
}