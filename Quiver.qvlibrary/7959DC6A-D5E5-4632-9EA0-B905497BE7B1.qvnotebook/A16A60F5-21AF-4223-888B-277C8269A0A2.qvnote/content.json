{
  "title": "Setup (installation, environments)",
  "cells": [
    {
      "type": "text",
      "data": "Best reference found so far (2017-11):&nbsp;<a href=\"http://docs.python-guide.org/en/latest/dev/virtualenvs/#virtualenvironments-ref\">http://docs.python-guide.org/en/latest/dev/virtualenvs/#virtualenvironments-ref</a>&nbsp;(Hitchhiker's Guide)&nbsp;"
    },
    {
      "type": "text",
      "data": "<h2>macOS Setup</h2>"
    },
    {
      "type": "text",
      "data": "One way: pyenv, see&nbsp;<a href=\"https://opensource.com/article/19/5/python-3-default-mac\">https://opensource.com/article/19/5/python-3-default-mac</a>"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "brew install pyenv\npyenv install 3.x.x\npyenv global 3.x.x\n# .zshrc here or .bash_profile\necho -e 'if command -v pyenv 1>/dev/null 2>&1; then\\n  eval \"$(pyenv init -)\"\\nfi' >> ~/.zshrc\necho 'export PYENV_ROOT=\"$HOME/.pyenv\"' >> ~/.zshrc\necho 'export PATH=\"$PYENV_ROOT/bin:$PATH\"' >> ~/.zshrc\n# home clone\ngit clone https://github.com/pyenv/pyenv.git ~/.pyenv\n# fire!\nexec \"$SHELL\"\n# Check available versions\npyenv install --list\n# Install pyenv-virtuelenv\nbrew install pyenv-virtualenv"
    },
    {
      "type": "text",
      "data": "When installed w/ brew (not recommended according to the above article) this might be necessary (run brew doctor for problems):"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "brew link python"
    },
    {
      "type": "text",
      "data": "Check installations"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "ll /usr/local/opt/python/libexec/bin"
    },
    {
      "type": "text",
      "data": "... should give something like"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "lrwxr-xr-x  1 karsten  admin   26 Dec 15 10:26 easy_install -> ../../bin/easy_install-3.9\nlrwxr-xr-x  1 karsten  admin   58 Dec 15 10:25 idle -> ../../Frameworks/Python.framework/Versions/3.9/bin/idle3.9\nlrwxr-xr-x  1 karsten  admin   14 Dec 15 10:26 pip -> ../../bin/pip3\nlrwxr-xr-x  1 karsten  admin   59 Dec 15 10:25 pydoc -> ../../Frameworks/Python.framework/Versions/3.9/bin/pydoc3.9\nlrwxr-xr-x  1 karsten  admin   60 Dec 15 10:25 python -> ../../Frameworks/Python.framework/Versions/3.9/bin/python3.9\nlrwxr-xr-x  1 karsten  admin   67 Dec 15 10:25 python-config -> ../../Frameworks/Python.framework/Versions/3.9/bin/python3.9-config\nlrwxr-xr-x  1 karsten  admin   16 Dec 15 10:26 wheel -> ../../bin/wheel3"
    },
    {
      "type": "text",
      "data": "<h2>Virtual Environments</h2>"
    },
    {
      "type": "text",
      "data": "<h3>pip</h3>"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "# 2.x: pip install --user pipenv\npip3 install --user pipenv"
    },
    {
      "type": "text",
      "data": "Usage (in your project)"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "cd myproject\n$ pipenv install requests"
    },
    {
      "type": "text",
      "data": "Import in your project etc., then execute like"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "pipenv run python main.py"
    },
    {
      "type": "text",
      "data": "Bring all your commands access to the installed package&nbsp;"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "pipenv shell"
    },
    {
      "type": "text",
      "data": "(Not sure if working w/ zsh)."
    },
    {
      "type": "text",
      "data": ""
    },
    {
      "type": "text",
      "data": "<h3>Virtualenv (lower level)</h3>"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "pip3 install virtualenv"
    },
    {
      "type": "text",
      "data": "Then, on project level:"
    },
    {
      "type": "code",
      "language": "sh",
      "data": "$ cd my_project_folder\n$ virtualenv my_project"
    },
    {
      "type": "text",
      "data": "=&gt;creates a Python copy to the project folder."
    },
    {
      "type": "markdown",
      "data": "virtualenv -p /usr/bin/python2.7 my_project"
    },
    {
      "type": "text",
      "data": "Allows specifying the interpreter."
    }
  ]
}